---
import Hero from '@/components/hero.astro';
import Layout from '@/layouts/layout.astro';
import { getSinglePage } from '@/lib/content-parser.astro';
import Icon from "astro-icon";
import { type CollectionEntry, getEntry } from 'astro:content';
import clsx from 'clsx';

// get all categories
const allToolings = await getSinglePage('tooling');



const collectCategories = async () => {
    const categories: Map<string, CollectionEntry<'categories'>> = new Map();

    for (const tooling of allToolings) {
        if (!tooling.data.category) {
            continue;
        }
        const category = tooling.data.category.id

        if (!categories.has(category)) {
            const c = await getEntry('categories', category)
            categories.set(category, c);
        }
    }

    return categories;
}

const categories = await collectCategories();


---

<Layout title="Leistungen"
    description="Meine Leistungen für deine Digitalisierung."
    index={false}
>
<Hero
    subtitle='Unsere Expertise'
    heading='IT-Dienstleistungen für deinen Erfolg'
    description='Unsere Dienstleistungen umfassen ein breites Spektrum, darunter Web-Entwicklung, App-Entwicklung, Individualsoftware, SEO-Optimierung und Prozesssoftware. Wir bieten umfassende Unterstützung und maßgeschneiderte Lösungen für alle deine IT-Anforderungen. Egal, ob du nach individuellen Anwendungen, Online-Präsenzen oder Suchmaschinenoptimierung suchst – wir haben die Erfahrung und das Fachwissen, um deine Ziele zu erreichen.'
/>
<section class="relative px-5vw w-full py-24 sm:py-32">
    <div class="max-w-8xl mx-auto w-full">
        <h1 class="text-3xl font-bold tracking-tight text-primary sm:text-4xl max-w-2xl">
            <span class="text-3xl sm:text-4xl mt-6 max-w-5xl font-display">
                Womit wir gerne Arbeiten
            </span>
        </h1>
    </div>
    <ul role="list" class="grid grid-cols-1 gap-10 sm:grid-cols-2 mt-8">
        {Array.from(categories.values()).map((category) => (
            <li class={clsx(
                "text-base text-gray-600 before:bg-gray-950 after:bg-gray-100",
            )}>
                <div
                    class="pl-8 relative before:absolute after:absolute before:bg-neutral-950 after:bg-neutral-950/10 before:left-0 before:top-0 before:h-6 before:w-px after:bottom-0 after:left-0 after:top-8 after:w-px"
                >
                    <h5 class="font-display text-2xl font-medium text-gray-950">
                        {category.data.name}
                    </h5>
                    <div class="relative mb-4 flex flex-wrap gap-2 mt-2">
                        {allToolings.filter((t) => {
                            if (!t.data.category) {
                                return false;
                            }
                            return t.data.category?.id === category.id;
                        }).map((tool) => {
                            return (
                                <a
                                    href={`/tooling/${tool.slug}`}
                                    class={clsx(
                                        "relative grid items-center font-sans font-medium uppercase whitespace-nowrap select-none",
                                        "transition-colors bg-gray-900 hover:bg-gray-700 text-white py-1 px-2 text-xs rounded-lg"
                                    )}
                                >
                                    <span>
                                        {tool.data.name}
                                    </span>
                                </a>
                            )
                        })}   
                    </div>
                    <p class="">
                        {category.data.description}    
                    </p>
                </div>
                
                
            </li>
        ))}
        
    </ul>
</section>

</Layout>
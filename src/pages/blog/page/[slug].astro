---
import { getSinglePage } from '@/lib/content-parser.astro';
import Layout from "@/layouts/layout.astro";
import BlogListHeader from '@/components/blog-list-header.astro';
import { sortByDate } from '@/lib/utils/sort';
import { getTaxonomy } from '@/lib/taxonomy-parser.astro';
import BlogPost from '@/components/blog-post.astro';
import Pagination from '@/components/pagination.astro';

const PAGE_SIZE = 9;

const { slug } = Astro.params;

const posts = await getSinglePage("blog")
const sortedPosts = sortByDate(posts)

const categories = await getTaxonomy("blog", "topics");

const totalPages = Math.ceil(posts.length / PAGE_SIZE);
const currentPage = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
const indexOfLastPost = currentPage * PAGE_SIZE;
const indexOfFirstPost = indexOfLastPost - PAGE_SIZE;

const currentPosts = sortedPosts.slice(indexOfFirstPost, indexOfLastPost);

export async function getStaticPaths() {
  const posts = await getSinglePage("blog");
  const totalPages = Math.ceil(posts.length / 2);
  const paths: Array<{
    params: {
        slug: string;
    }
  }> = [];

  for (let i = 1; i < totalPages; i++) {
    paths.push({
      params: {
        slug: (i + 1).toString(),
      },
    });
  }
  return paths;
}

const pageTitle = "Blog";
---
<Layout title={pageTitle}>
  <BlogListHeader />
  <div class="w-full px-5vw mx-auto">
    <div class="relative grid grid-cols-4 gap-x-4 md:grid-cols-8 lg:grid-cols-12 lg:gap-x-6 mx-auto max-w-8xl mb-14">
        <div class="text-lg font-medium text-primary col-span-full mb-6">Search by Topics</div>
        <div class="col-span-full -mb-4 -mr-4 flex flex-wrap lg:col-span-10">
            {
                categories.map((tag) => (
                    <a href={`/blog/topics/${tag}`} class="relative mb-4 me-4 block h-auto w-auto cursor-pointer rounded-full px-3 py-1 text-sm transition text-primary bg-slate-100 hover:bg-slate-200">
                        <span>{tag}</span>
                    </a>
                ))
            }
        </div>
    </div>
  </div>

  <section class="w-full px-5vw relative">
    <div
      class="relative grid grid-cols-4 gap-x-4 md:grid-cols-8 lg:grid-cols-12 lg:gap-x-6 mx-auto max-w-8xl"
    >
      {
        currentPosts.map((post) => (
          <div class="col-span-4 mb-10 flex">
            <BlogPost url={`/blog/${post.slug}`} title={post.data.title} date={post.data.date} image={post.data.image} />
          </div>
        ))
      }

      <div class="col-span-full">
        <Pagination
            section={"blog"}
            currentPage={currentPage}
            totalPages={totalPages}
          />
      </div>
    </div>
  </section>
</Layout>
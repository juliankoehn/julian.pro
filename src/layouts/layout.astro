---
import type { Person, WithContext } from "schema-dts";
import { ViewTransitions } from 'astro:transitions';
import Navbar from "@/components/navbar.astro";
import Footer from "@/components/footer.astro";

const metaData = {
  title: "Julian Koehn",
  summary: "I'm a software engineer, currently working at Astro.",
  get description() {
    return `${this.title} - ${this.summary}`;
  },
};

const jsonLd: WithContext<Person> = {
  "@context": "https://schema.org",
  "@type": "Person",
  name: "Julian Koehn",
  alternateName: "Julian",
  description: metaData.summary,
  email: "me@julian.pro",
};

if (Astro.site) {
  jsonLd["@id"] = `${Astro.site}#identity`;
  jsonLd.url = Astro.site.toString();
}

export interface Props {
	title?: string;
	description?: string;
	index?: string;
    children: any;
}

const { title, description, index = 'index' } = Astro.props;
---

<html lang="de">
  <head prefix="og: https://ogp.me/ns# profile: https://ogp.me/ns/profile#">
    <!-- Common head tags -->
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title ? `${title} - ${metaData.title}` : metaData.title}</title>
    <meta name="description" content={description ?? metaData.description} />
    <meta name="robots" content=`${index}, follow` />
    <link rel="sitemap" href="/sitemap-index.xml" />
    {Astro.site && <link rel="canonical" href={Astro.site} />}

    <!-- Open Graph -->
    <meta property="og:title" content={metaData.title} />
    <meta property="og:description" content={metaData.summary} />
    <meta property="og:type" content="profile" />
    <meta property="profile:first_name" content="Stefan" />
    <meta property="profile:last_name" content="Samson" />
    <meta property="profile:username" content="SSbit01" />
    <meta property="profile:gender" content="male" />
    <ViewTransitions />
    {
      Astro.site && (
        <>
          <meta property="og:url" content={Astro.site} />
          <meta property="og:image" content={`${Astro.site}images/og.png`} />
        </>
      )
    }

    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={metaData.title} />
    <meta name="twitter:description" content={metaData.description} />
    {
      Astro.site && (
        <meta name="twitter:image" content={`${Astro.site}images/2-1.png`} />
      )
    }

    <script src="https://statsy.observer/clnuimax10007ql0hx056h19p.js" defer
    ></script>
    <script>
        !function(t,e){var o,n,p,r;e.__SV||(window.posthog=e,e._i=[],e.init=function(i,s,a){function g(t,e){var o=e.split(".");2==o.length&&(t=t[o[0]],e=o[1]),t[e]=function(){t.push([e].concat(Array.prototype.slice.call(arguments,0)))}}(p=t.createElement("script")).type="text/javascript",p.async=!0,p.src=s.api_host+"/static/array.js",(r=t.getElementsByTagName("script")[0]).parentNode.insertBefore(p,r);var u=e;for(void 0!==a?u=e[a]=[]:a="posthog",u.people=u.people||[],u.toString=function(t){var e="posthog";return"posthog"!==a&&(e+="."+a),t||(e+=" (stub)"),e},u.people.toString=function(){return u.toString(1)+".people (stub)"},o="capture identify alias people.set people.set_once set_config register register_once unregister opt_out_capturing has_opted_out_capturing opt_in_capturing reset isFeatureEnabled onFeatureFlags getFeatureFlag getFeatureFlagPayload reloadFeatureFlags group updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures getActiveMatchingSurveys getSurveys".split(" "),n=0;n<o.length;n++)g(u,o[n]);e._i.push([i,s,a])},e.__SV=1)}(document,window.posthog||[]);
        posthog.init('phc_tKwmU2L3Y3PR38jnL42mOrQiv7sfdZ6GLWqDL4lPjBF',{api_host:'https://app.posthog.com'})
    </script>
  </head>
  <body class="mt-3 bg-background text-foreground">
    <div id="top" />
    <Navbar />
    <main class="flex items-center flex-col w-full">
      <slot />
    </main>
    <Footer />
  </body>
</html>

<style>
    :global(html) {
        scroll-behavior: smooth;
    }

    @media (prefers-reduced-motion: reduce) {
     :global(html) {
       scroll-behavior: auto;
     }
   }
</style>
